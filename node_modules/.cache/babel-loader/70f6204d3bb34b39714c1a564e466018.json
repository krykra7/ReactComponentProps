{"ast":null,"code":"var _jsxFileName = \"/home/kkrawczyk/Projects/6hxo7u/src/working/ListItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport { Box, Button } from \"@mui/material\";\nimport { makeStyles } from \"tss-react/mui\";\nimport AssignmentIcon from \"@mui/icons-material/Assignment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nvar useStyles = makeStyles()(function (theme) {\n  return {\n    buttonBox: {\n      bottom: theme.spacing(2),\n      alignSelf: \"flex-end\",\n      marginBottom: theme.spacing(2),\n      marginRight: theme.spacing(2),\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    button: {\n      margin: theme.spacing(1),\n      borderRadius: 20\n    },\n    prescriptionCount: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: theme.spacing(1),\n      flexWrap: \"wrap\"\n    }\n  };\n});\nexport default function ListItem(_ref) {\n  _s();\n\n  var params = _ref.params,\n      ref = _ref.ref;\n\n  var _useStyles = useStyles(),\n      classes = _useStyles.classes;\n\n  return /*#__PURE__*/_createElement(Paper, {\n    ref: ref,\n    key: params.id,\n    elevation: 24,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: params.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.prescriptionCount,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: params.prescriptionCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AssignmentIcon, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n    children: params.syndrome\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.buttonBox,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: classes.button,\n      onClick: function onClick() {},\n      variant: \"outlined\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.button,\n      onClick: function onClick() {},\n      variant: \"contained\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this));\n}\n\n_s(ListItem, \"dEcGkkWBp2V3HKTMad5HGP/1Kk4=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["/home/kkrawczyk/Projects/6hxo7u/src/working/ListItem.tsx"],"names":["React","Paper","Typography","Divider","Box","Button","makeStyles","AssignmentIcon","useStyles","theme","buttonBox","bottom","spacing","alignSelf","marginBottom","marginRight","display","justifyContent","button","margin","borderRadius","prescriptionCount","alignItems","gap","flexWrap","ListItem","params","ref","classes","id","date","syndrome"],"mappings":"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","sourcesContent":["import React, {LegacyRef} from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport {Box, Button} from \"@mui/material\";\nimport {makeStyles} from \"tss-react/mui\";\nimport AssignmentIcon from \"@mui/icons-material/Assignment\";\nimport {Item} from \"../common/Item\";\n\nconst useStyles = makeStyles()((theme) => ({\n    buttonBox: {\n        bottom: theme.spacing(2),\n        alignSelf: \"flex-end\",\n        marginBottom: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n    },\n    button: {\n        margin: theme.spacing(1),\n        borderRadius: 20\n    },\n    prescriptionCount: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: theme.spacing(1),\n        flexWrap: \"wrap\",\n    }\n}))\n\nexport default function ListItem({params, ref}: { params: Item, ref?: any }) {\n    const {classes} = useStyles();\n\n    return (\n        <Paper {...{ref: ref} as any} key={params.id} elevation={24} variant=\"outlined\">\n            <Box>\n                <Typography>{params.date}</Typography>\n                <Box className={classes.prescriptionCount}>\n                    <Typography>{params.prescriptionCount}</Typography>\n                    <AssignmentIcon color={\"primary\"}/>\n                </Box>\n            </Box>\n            <Divider/>\n            <Typography>{params.syndrome}</Typography>\n            <Box className={classes.buttonBox}>\n                <Button className={classes.button}\n                        onClick={() => {}}\n                        variant=\"outlined\">\n                    Cancel\n                </Button>\n                <Button className={classes.button}\n                        onClick={() => {}}\n                        variant=\"contained\">\n                    Save\n                </Button>\n            </Box>\n        </Paper>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}